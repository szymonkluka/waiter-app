"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getHasError = void 0;

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var iterateArray = function iterateArray(errorTree) {
  var _iteratorNormalCompletion = true;
  var _didIteratorError = false;
  var _iteratorError = undefined;

  try {
    for (var _iterator = errorTree[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
      var value = _step.value;
      if (iterateObj(value)) return true;
    }
  } catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
  } finally {
    try {
      if (!_iteratorNormalCompletion && _iterator.return != null) {
        _iterator.return();
      }
    } finally {
      if (_didIteratorError) {
        throw _iteratorError;
      }
    }
  }

  return false;
};

var iterateObj = function iterateObj(errorTree) {
  var _arr = Object.values(errorTree);

  for (var _i = 0; _i < _arr.length; _i++) {
    var value = _arr[_i];
    var isError = void 0;

    if (Array.isArray(value)) {
      isError = value.error || iterateArray(value);
    } else if ((0, _typeof2.default)(value) === 'object') {
      isError = iterateObj(value);
    } else {
      isError = Boolean(value);
    }

    if (isError) return true;
  }

  return false;
};

var getHasError = function getHasError(errorTree) {
  return iterateObj(errorTree);
};

exports.getHasError = getHasError;