"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.tryValidateFormAndFields = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectSpread3 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _validateForm = require("./validateForm");

var tryValidateFormAndFields = function tryValidateFormAndFields(validate, fieldData) {
  var result = {
    isValid: true,
    errors: (0, _validateForm.validateForm)(validate, fieldData)
  };
  Object.entries(fieldData).forEach(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        key = _ref2[0],
        v = _ref2[1];

    if (result.errors[key]) {
      v.setValidationResult(result.errors[key]);
      result.isValid = false;
    } else {
      // only need to run field validation if there is already a form level issue with it.
      var fieldResult = v.validate();
      var hasError = Boolean(fieldResult);

      if (hasError) {
        if ((0, _typeof2.default)(fieldResult) === 'object') {
          result.errors = (0, _objectSpread3.default)({}, result.errors, (0, _defineProperty2.default)({}, key, fieldResult));
        } else {
          result.errors[key] = fieldResult;
        }
      }

      result.isValid = result.isValid && !hasError;
    }
  });
  return result;
};

exports.tryValidateFormAndFields = tryValidateFormAndFields;