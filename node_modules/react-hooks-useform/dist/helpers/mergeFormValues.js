"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.mergeFormValues = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _immutable = require("immutable");

var _fieldReducer = require("../reducer/fieldReducer");

var mergeFormValues = function mergeFormValues(state, initialValues) {
  var values = reduceFields(state, initialValues); // Remove any fields that were specifically removed through actions

  values = state.get(_fieldReducer.removedFieldsKey, (0, _immutable.List)()).reduce(function (acc, fieldName) {
    return acc.deleteIn(fieldName.split('.'));
  }, values);
  return values;
};

exports.mergeFormValues = mergeFormValues;

var reduceFields = function reduceFields(state, initialState) {
  return state.get(_fieldReducer.fieldsKey, (0, _immutable.Map)()).entrySeq().reduce(function (acc, _ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
        key = _ref2[0],
        fieldData = _ref2[1];

    var items = fieldData.get('items');
    var value = !items ? fieldData.getIn(['current', 'value']) : items.map(function (item, index) {
      return reduceFields(item, acc.getIn((0, _toConsumableArray2.default)(key.split('.')).concat([index]), (0, _immutable.Map)()));
    });
    return acc.setIn(key.split('.'), value);
  }, initialState);
};