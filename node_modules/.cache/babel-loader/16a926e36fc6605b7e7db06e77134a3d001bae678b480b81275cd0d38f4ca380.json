{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenov\\\\Desktop\\\\react-blog-new\\\\src\\\\components\\\\features\\\\PostForm\\\\PostForm.js\",\n  _s = $RefreshSig$();\nimport { Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { FormLabel, FormControl, FormSelect } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function PostForm(_ref) {\n  _s();\n  let {\n    action,\n    actionText,\n    title,\n    author,\n    publishedDate,\n    shortDescription,\n    content,\n    category\n  } = _ref;\n  const [titleState, setTitle] = useState(title || '');\n  const [authorState, setAuthor] = useState(author || '');\n  const [publishedDateState, setDate] = useState(publishedDate || '');\n  const [shortDescriptionState, setDescription] = useState(shortDescription || '');\n  const [contentState, setContent] = useState(content || '');\n  const [categoryState, setCategory] = useState(category || '');\n  const [contentError, setContentError] = useState(false);\n  const [dateError, setDateError] = useState(false);\n  const [categoryError, setCategoryError] = useState(false);\n  const handleSubmit = () => {\n    setContentError(!contentState);\n    setDateError(!publishedDateState);\n    setCategoryError(!categoryState);\n    if (contentState && publishedDateState && categoryState) {\n      action({\n        title: titleState,\n        author: authorState,\n        publishedDate: publishedDateState,\n        shortDescription: shortDescriptionState,\n        content: contentState,\n        category: categoryState\n      });\n    }\n  };\n  const {\n    register,\n    handleSubmit: validate,\n    formState: {\n      errors\n    }\n  } = useForm();\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: validate(handleSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      className: \"mt-3\",\n      children: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      ...register('title', {\n        required: true,\n        minLength: 4\n      }),\n      value: titleState,\n      onChange: e => setTitle(e.target.value),\n      type: \"text\",\n      placeholder: \"Enter title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), errors.title && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"d-block form-text text-danger mt-1\",\n      children: \"This field is required and must contain at least 4 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      className: \"mt-3\",\n      children: \"Author\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      ...register('author', {\n        required: true,\n        minLength: 4\n      }),\n      value: authorState,\n      onChange: e => setAuthor(e.target.value),\n      placeholder: \"Enter author\",\n      type: \"text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), errors.author && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"d-block form-text text-danger mt-1\",\n      children: \"This field is required and must contain at least 4 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      className: \"mt-3\",\n      children: \"Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormSelect, {\n      value: categoryState,\n      onChange: e => setCategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: \"Select category...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), allCategories.map(category => {\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), categoryError && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"d-block form-text text-danger mt-1\",\n      children: \"You must pick a category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      className: \"mt-3\",\n      children: \"Short description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      ...register('description', {\n        required: true,\n        minLength: 20\n      }),\n      value: shortDescriptionState,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Leave a comment here\",\n      as: \"textarea\",\n      rows: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), errors.description && /*#__PURE__*/_jsxDEV(\"small\", {\n      className: \"d-block form-text text-danger mt-1\",\n      children: \"This field is required and must contain at least 20 characters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-1 mt-3\",\n      children: \"Main content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      className: \"d-block mt-3\",\n      children: actionText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(PostForm, \"DsQQrPgCl0G3G+izOMgnQK08MLQ=\", false, function () {\n  return [useForm];\n});\n_c = PostForm;\nPostForm.propTypes = {\n  action: PropTypes.func.isRequired,\n  actionText: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Button","useState","PropTypes","useForm","FormLabel","FormControl","FormSelect","useSelector","PostForm","action","actionText","title","author","publishedDate","shortDescription","content","category","titleState","setTitle","authorState","setAuthor","publishedDateState","setDate","shortDescriptionState","setDescription","contentState","setContent","categoryState","setCategory","contentError","setContentError","dateError","setDateError","categoryError","setCategoryError","handleSubmit","register","validate","formState","errors","required","minLength","e","target","value","allCategories","map","description","propTypes","func","isRequired","string"],"sources":["C:/Users/lenov/Desktop/react-blog-new/src/components/features/PostForm/PostForm.js"],"sourcesContent":["import { Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { FormLabel, FormControl, FormSelect } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\n\n\nexport function PostForm({\n  action,\n  actionText,\n  title,\n  author,\n  publishedDate,\n  shortDescription,\n  content,\n  category,\n}) {\n  const [titleState, setTitle] = useState(title || '');\n  const [authorState, setAuthor] = useState(author || '');\n  const [publishedDateState, setDate] = useState(publishedDate || '');\n  const [shortDescriptionState, setDescription] = useState(\n    shortDescription || ''\n  );\n  const [contentState, setContent] = useState(content || '');\n  const [categoryState, setCategory] = useState(category || '');\n\n  const [contentError, setContentError] = useState(false);\n  const [dateError, setDateError] = useState(false);\n  const [categoryError, setCategoryError] = useState(false);\n\n\n  const handleSubmit = () => {\n    setContentError(!contentState);\n    setDateError(!publishedDateState);\n    setCategoryError(!categoryState);\n    if (contentState && publishedDateState && categoryState) {\n      action({\n        title: titleState,\n        author: authorState,\n        publishedDate: publishedDateState,\n        shortDescription: shortDescriptionState,\n        content: contentState,\n        category: categoryState,\n      });\n    }\n  };\n\n  const {\n    register,\n    handleSubmit: validate,\n    formState: { errors },\n  } = useForm();\n\n  return (\n    <form onSubmit={validate(handleSubmit)}>\n      <FormLabel className='mt-3'>Title</FormLabel>\n      <FormControl\n        {...register('title', { required: true, minLength: 4 })}\n        value={titleState}\n        onChange={(e) => setTitle(e.target.value)}\n        type='text'\n        placeholder='Enter title'\n      />\n      {errors.title && (\n        <small className='d-block form-text text-danger mt-1'>\n          This field is required and must contain at least 4 characters\n        </small>\n      )}\n\n      <FormLabel className='mt-3'>Author</FormLabel>\n      <FormControl\n        {...register('author', { required: true, minLength: 4 })}\n        value={authorState}\n        onChange={(e) => setAuthor(e.target.value)}\n        placeholder='Enter author'\n        type='text'\n      />\n      {errors.author && (\n        <small className='d-block form-text text-danger mt-1'>\n          This field is required and must contain at least 4 characters\n        </small>\n      )}\n\n\n      <FormLabel className='mt-3'>Category</FormLabel>\n      <FormSelect\n        value={categoryState}\n        onChange={(e) => setCategory(e.target.value)}\n      >\n        <option value='' disabled>\n          Select category...\n        </option>\n        {allCategories.map((category) => {\n          return (\n            <option key={category} value={category}>\n              {category}\n            </option>\n          );\n        })}\n      </FormSelect>\n      {categoryError && (\n        <small className='d-block form-text text-danger mt-1'>\n          You must pick a category\n        </small>\n      )}\n\n      <FormLabel className='mt-3'>Short description</FormLabel>\n      <FormControl\n        {...register('description', { required: true, minLength: 20 })}\n        value={shortDescriptionState}\n        onChange={(e) => setDescription(e.target.value)}\n        placeholder='Leave a comment here'\n        as='textarea'\n        rows={5}\n      />\n      {errors.description && (\n        <small className='d-block form-text text-danger mt-1'>\n          This field is required and must contain at least 20 characters\n        </small>\n      )}\n\n      <p className='mb-1 mt-3'>Main content</p>\n\n\n      <Button type='submit' className='d-block mt-3'>\n        {actionText}\n      </Button>\n    </form>\n  );\n}\n\nPostForm.propTypes = {\n  action: PropTypes.func.isRequired,\n  actionText: PropTypes.string.isRequired,\n};"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,iBAAiB;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,iBAAiB;AACpE,SAASC,WAAW,QAAQ,aAAa;AAAC;AAG1C,OAAO,SAASC,QAAQ,OASrB;EAAA;EAAA,IATsB;IACvBC,MAAM;IACNC,UAAU;IACVC,KAAK;IACLC,MAAM;IACNC,aAAa;IACbC,gBAAgB;IAChBC,OAAO;IACPC;EACF,CAAC;EACC,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACU,KAAK,IAAI,EAAE,CAAC;EACpD,MAAM,CAACQ,WAAW,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAACW,MAAM,IAAI,EAAE,CAAC;EACvD,MAAM,CAACS,kBAAkB,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAACY,aAAa,IAAI,EAAE,CAAC;EACnE,MAAM,CAACU,qBAAqB,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CACtDa,gBAAgB,IAAI,EAAE,CACvB;EACD,MAAM,CAACW,YAAY,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAACc,OAAO,IAAI,EAAE,CAAC;EAC1D,MAAM,CAACY,aAAa,EAAEC,WAAW,CAAC,GAAG3B,QAAQ,CAACe,QAAQ,IAAI,EAAE,CAAC;EAE7D,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC8B,SAAS,EAAEC,YAAY,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgC,aAAa,EAAEC,gBAAgB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAGzD,MAAMkC,YAAY,GAAG,MAAM;IACzBL,eAAe,CAAC,CAACL,YAAY,CAAC;IAC9BO,YAAY,CAAC,CAACX,kBAAkB,CAAC;IACjCa,gBAAgB,CAAC,CAACP,aAAa,CAAC;IAChC,IAAIF,YAAY,IAAIJ,kBAAkB,IAAIM,aAAa,EAAE;MACvDlB,MAAM,CAAC;QACLE,KAAK,EAAEM,UAAU;QACjBL,MAAM,EAAEO,WAAW;QACnBN,aAAa,EAAEQ,kBAAkB;QACjCP,gBAAgB,EAAES,qBAAqB;QACvCR,OAAO,EAAEU,YAAY;QACrBT,QAAQ,EAAEW;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAM;IACJS,QAAQ;IACRD,YAAY,EAAEE,QAAQ;IACtBC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGpC,OAAO,EAAE;EAEb,oBACE;IAAM,QAAQ,EAAEkC,QAAQ,CAACF,YAAY,CAAE;IAAA,wBACrC,QAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAY,eAC7C,QAAC,WAAW;MAAA,GACNC,QAAQ,CAAC,OAAO,EAAE;QAAEI,QAAQ,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAE,CAAC,CAAC;MACvD,KAAK,EAAExB,UAAW;MAClB,QAAQ,EAAGyB,CAAC,IAAKxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC1C,IAAI,EAAC,MAAM;MACX,WAAW,EAAC;IAAa;MAAA;MAAA;MAAA;IAAA,QACzB,EACDL,MAAM,CAAC5B,KAAK,iBACX;MAAO,SAAS,EAAC,oCAAoC;MAAA,UAAC;IAEtD;MAAA;MAAA;MAAA;IAAA,QACD,eAED,QAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAY,eAC9C,QAAC,WAAW;MAAA,GACNyB,QAAQ,CAAC,QAAQ,EAAE;QAAEI,QAAQ,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAE,CAAC,CAAC;MACxD,KAAK,EAAEtB,WAAY;MACnB,QAAQ,EAAGuB,CAAC,IAAKtB,SAAS,CAACsB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAC3C,WAAW,EAAC,cAAc;MAC1B,IAAI,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QACX,EACDL,MAAM,CAAC3B,MAAM,iBACZ;MAAO,SAAS,EAAC,oCAAoC;MAAA,UAAC;IAEtD;MAAA;MAAA;MAAA;IAAA,QACD,eAGD,QAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAY,eAChD,QAAC,UAAU;MACT,KAAK,EAAEe,aAAc;MACrB,QAAQ,EAAGe,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAAA,wBAE7C;QAAQ,KAAK,EAAC,EAAE;QAAC,QAAQ;QAAA,UAAC;MAE1B;QAAA;QAAA;QAAA;MAAA,QAAS,EACRC,aAAa,CAACC,GAAG,CAAE9B,QAAQ,IAAK;QAC/B,oBACE;UAAuB,KAAK,EAAEA,QAAS;UAAA,UACpCA;QAAQ,GADEA,QAAQ;UAAA;UAAA;UAAA;QAAA,QAEZ;MAEb,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QACS,EACZiB,aAAa,iBACZ;MAAO,SAAS,EAAC,oCAAoC;MAAA,UAAC;IAEtD;MAAA;MAAA;MAAA;IAAA,QACD,eAED,QAAC,SAAS;MAAC,SAAS,EAAC,MAAM;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAY,eACzD,QAAC,WAAW;MAAA,GACNG,QAAQ,CAAC,aAAa,EAAE;QAAEI,QAAQ,EAAE,IAAI;QAAEC,SAAS,EAAE;MAAG,CAAC,CAAC;MAC9D,KAAK,EAAElB,qBAAsB;MAC7B,QAAQ,EAAGmB,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAChD,WAAW,EAAC,sBAAsB;MAClC,EAAE,EAAC,UAAU;MACb,IAAI,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QACR,EACDL,MAAM,CAACQ,WAAW,iBACjB;MAAO,SAAS,EAAC,oCAAoC;MAAA,UAAC;IAEtD;MAAA;MAAA;MAAA;IAAA,QACD,eAED;MAAG,SAAS,EAAC,WAAW;MAAA,UAAC;IAAY;MAAA;MAAA;MAAA;IAAA,QAAI,eAGzC,QAAC,MAAM;MAAC,IAAI,EAAC,QAAQ;MAAC,SAAS,EAAC,cAAc;MAAA,UAC3CrC;IAAU;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEX;AAAC,GA1HeF,QAAQ;EAAA,QA4ClBL,OAAO;AAAA;AAAA,KA5CGK,QAAQ;AA4HxBA,QAAQ,CAACwC,SAAS,GAAG;EACnBvC,MAAM,EAAEP,SAAS,CAAC+C,IAAI,CAACC,UAAU;EACjCxC,UAAU,EAAER,SAAS,CAACiD,MAAM,CAACD;AAC/B,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}