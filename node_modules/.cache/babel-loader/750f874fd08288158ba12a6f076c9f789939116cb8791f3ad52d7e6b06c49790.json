{"ast":null,"code":"export const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostById = (_ref2, id) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === id);\n};\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nexport const getData = payload => ({\n  type: GET_DATA,\n  payload\n});\nexport const editedData = payload => ({\n  type: EDIT_DATA,\n  payload\n});\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst EDIT_POST = createActionName('EDIT_POST');\nconst GET_DATA = createActionName('GET_DATA');\nexport const fetchData = () => {\n  return dispatch => {\n    fetch('http://localhost:3131/posts').then(response => response.json()).then(data => dispatch(getData(data)));\n  };\n};\nexport const postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case EDIT_DATA:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    case GET_DATA:\n      return [...action.payload];\n    case CHANGE_STATUS:\n      return {\n        ...action.payload\n      };\n    default:\n      return statePart;\n  }\n};\nconst createActionNames = action => {\n  return `app/status/${action}`;\n};\nconst CHANGE_STATUS = createActionNames('CHANGE_STATUS');\nconst EDIT_DATA = createActionNames('EDIT_DATA');\nexport const addChangedData = changeData => {\n  return dispatch => {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(changeData)\n    };\n    fetch(`${'http://localhost:3131'}/posts/${changeData.id}`, options).then(response => response.json()).then(data => dispatch(editedData(data)));\n  };\n};\n\n// reducer","map":{"version":3,"names":["getAllPosts","_ref","posts","getPostById","_ref2","id","find","post","editPost","payload","type","EDIT_POST","getData","GET_DATA","editedData","EDIT_DATA","createActionName","actionName","fetchData","dispatch","fetch","then","response","json","data","postsReducer","statePart","arguments","length","undefined","action","map","CHANGE_STATUS","createActionNames","addChangedData","changeData","options","method","headers","body","JSON","stringify"],"sources":["C:/Users/lenov/Desktop/waiter-app/src/redux/postsRedux.js"],"sourcesContent":["export const getAllPosts = ({ posts }) => posts;\nexport const getPostById = ({ posts }, id) => posts.find(post => post.id === id);\n\nexport const editPost = payload => ({ type: EDIT_POST, payload });\nexport const getData = payload => ({ type: GET_DATA, payload });\nexport const editedData = payload => ({ type: EDIT_DATA, payload })\n\nconst createActionName = actionName => `app/posts/${actionName}`;\n\nconst EDIT_POST = createActionName('EDIT_POST');\nconst GET_DATA = createActionName('GET_DATA');\n\nexport const fetchData = () => {\n  return (dispatch) => {\n    fetch('http://localhost:3131/posts')\n      .then((response) => response.json())\n      .then((data) => dispatch(getData(data)));\n  };\n};\n\nexport const postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case EDIT_DATA:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    case GET_DATA:\n      return [...action.payload];\n    case CHANGE_STATUS:\n      return { ...action.payload };\n    default:\n      return statePart;\n  }\n};\n\nconst createActionNames = (action) => {\n  return `app/status/${action}`;\n};\n\nconst CHANGE_STATUS = createActionNames('CHANGE_STATUS');\nconst EDIT_DATA = createActionNames('EDIT_DATA');\n\n\n\nexport const addChangedData = (changeData) => {\n  return (dispatch) => {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(changeData)\n    };\n    fetch(`${'http://localhost:3131'}/posts/${changeData.id}`, options)\n      .then((response) => response.json())\n      .then((data) => dispatch(editedData(data)));\n  };\n}\n\n\n\n\n\n\n// reducer\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}