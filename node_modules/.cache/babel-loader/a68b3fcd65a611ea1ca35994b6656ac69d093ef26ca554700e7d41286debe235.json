{"ast":null,"code":"export const getAllTables = _ref => {\n  let {\n    tables\n  } = _ref;\n  return tables;\n};\nexport const getTableById = (_ref2, id) => {\n  let {\n    tables\n  } = _ref2;\n  return tables.find(post => post.id === id);\n};\nexport const editTable = payload => ({\n  type: EDIT_TABLE,\n  payload\n});\nexport const getTables = payload => ({\n  type: GET_TABLES,\n  payload\n});\nexport const editedData = payload => ({\n  type: EDIT_DATA,\n  payload\n});\nconst createActionName = actionName => `app/tables/${actionName}`;\nconst EDIT_TABLE = createActionName('EDIT_POST');\nconst GET_TABLES = createActionName('GET_TABLES');\nexport const fetchData = () => {\n  return dispatch => {\n    fetch('http://localhost:3131/tables').then(response => response.json()).then(data => dispatch(getTables(data)));\n  };\n};\nexport const postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case EDIT_DATA:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    case EDIT_TABLE:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    case GET_TABLES:\n      return [...action.payload];\n    default:\n      return statePart;\n  }\n};\nconst createActionNames = action => {\n  return `app/status/${action}`;\n};\nconst EDIT_DATA = createActionNames('EDIT_DATA');\nexport const addChangedData = changeData => {\n  return dispatch => {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(changeData)\n    };\n    fetch(`${'http://localhost:3131'}/tables/${changeData.id}`, options).then(response => response.json()).then(data => dispatch(editedData(data)));\n  };\n};\n\n// reducer","map":{"version":3,"names":["getAllTables","_ref","tables","getTableById","_ref2","id","find","post","editTable","payload","type","EDIT_TABLE","getTables","GET_TABLES","editedData","EDIT_DATA","createActionName","actionName","fetchData","dispatch","fetch","then","response","json","data","postsReducer","statePart","arguments","length","undefined","action","map","createActionNames","addChangedData","changeData","options","method","headers","body","JSON","stringify"],"sources":["C:/Users/lenov/Desktop/waiter-app/src/redux/postsRedux.js"],"sourcesContent":["export const getAllTables = ({ tables }) => tables;\nexport const getTableById = ({ tables }, id) => tables.find(post => post.id === id);\n\nexport const editTable = payload => ({ type: EDIT_TABLE, payload });\nexport const getTables = payload => ({ type: GET_TABLES, payload });\nexport const editedData = payload => ({ type: EDIT_DATA, payload })\n\nconst createActionName = actionName => `app/tables/${actionName}`;\n\nconst EDIT_TABLE = createActionName('EDIT_POST');\nconst GET_TABLES = createActionName('GET_TABLES');\n\nexport const fetchData = () => {\n  return (dispatch) => {\n    fetch('http://localhost:3131/tables')\n      .then((response) => response.json())\n      .then((data) => dispatch(getTables(data)));\n  };\n};\n\nexport const postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case EDIT_DATA:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    case EDIT_TABLE:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    case GET_TABLES:\n      return [...action.payload];\n    default:\n      return statePart;\n  }\n};\n\nconst createActionNames = (action) => {\n  return `app/status/${action}`;\n};\n\nconst EDIT_DATA = createActionNames('EDIT_DATA');\n\n\n\nexport const addChangedData = (changeData) => {\n  return (dispatch) => {\n    const options = {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(changeData)\n    };\n    fetch(`${'http://localhost:3131'}/tables/${changeData.id}`, options)\n      .then((response) => response.json())\n      .then((data) => dispatch(editedData(data)));\n  };\n}\n\n\n\n\n\n\n// reducer\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}