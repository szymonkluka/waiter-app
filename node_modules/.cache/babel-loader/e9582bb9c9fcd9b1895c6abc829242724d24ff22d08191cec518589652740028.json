{"ast":null,"code":"import { API_URL } from '../config';\nimport { changeStatus } from './requestStatusReducer';\n\n//selectors\nexport const getAllTables = _ref => {\n  let {\n    tables\n  } = _ref;\n  return tables;\n};\nexport const getTableById = (_ref2, id) => {\n  let {\n    tables\n  } = _ref2;\n  return tables.find(table => table.id === id);\n};\n\n// actions\nconst createActionName = action => {\n  return `app/tables/${action}`;\n};\nconst GET_DATA = createActionName('GET_DATA');\n\n// action creators\nexport const getData = payload => ({\n  type: GET_DATA,\n  payload\n});\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(changeStatus(true));\n    fetch(`${API_URL}/tables`).then(response => response.json()).then(data => dispatch(getData(data)));\n  };\n};\n\n// reducer\nexport const tablesReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_DATA:\n      return [...action.payload];\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"names":["API_URL","changeStatus","getAllTables","_ref","tables","getTableById","_ref2","id","find","table","createActionName","action","GET_DATA","getData","payload","type","fetchData","dispatch","fetch","then","response","json","data","tablesReducer","statePart","arguments","length","undefined"],"sources":["C:/Users/lenov/Downloads/kodilla-waiter-app-master (1)/kodilla-waiter-app-master/src/redux/tablesReducer.js"],"sourcesContent":["import { API_URL } from '../config';\nimport { changeStatus } from './requestStatusReducer';\n\n//selectors\nexport const getAllTables = ({ tables }) => tables;\n\nexport const getTableById = ({ tables }, id) =>\n  tables.find((table) => table.id === id);\n\n// actions\nconst createActionName = (action) => {\n  return `app/tables/${action}`;\n};\n\nconst GET_DATA = createActionName('GET_DATA');\n\n// action creators\nexport const getData = (payload) => ({ type: GET_DATA, payload });\n\nexport const fetchData = () => {\n  return (dispatch) => {\n    dispatch(changeStatus(true));\n    fetch(`${API_URL}/tables`)\n      .then((response) => response.json())\n      .then((data) => dispatch(getData(data)))\n  };\n};\n\n// reducer\nexport const tablesReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return [...action.payload];\n    default:\n      return statePart;\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AACnC,SAASC,YAAY,QAAQ,wBAAwB;;AAErD;AACA,OAAO,MAAMC,YAAY,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAO,CAAC,GAAAD,IAAA;EAAA,OAAKC,MAAM;AAAA;AAElD,OAAO,MAAMC,YAAY,GAAGA,CAAAC,KAAA,EAAaC,EAAE;EAAA,IAAd;IAAEH;EAAO,CAAC,GAAAE,KAAA;EAAA,OACrCF,MAAM,CAACI,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAAC;AAAA;;AAEzC;AACA,MAAMG,gBAAgB,GAAIC,MAAM,IAAK;EACnC,OAAQ,cAAaA,MAAO,EAAC;AAC/B,CAAC;AAED,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,UAAU,CAAC;;AAE7C;AACA,OAAO,MAAMG,OAAO,GAAIC,OAAO,KAAM;EAAEC,IAAI,EAAEH,QAAQ;EAAEE;AAAQ,CAAC,CAAC;AAEjE,OAAO,MAAME,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAAChB,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5BiB,KAAK,CAAE,GAAElB,OAAQ,SAAQ,CAAC,CACvBmB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACJ,OAAO,CAACS,IAAI,CAAC,CAAC,CAAC;EAC5C,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,SAAAA,CAAA,EAA4B;EAAA,IAA3BC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEd,MAAM,GAAAc,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClD,QAAQhB,MAAM,CAACI,IAAI;IACjB,KAAKH,QAAQ;MACX,OAAO,CAAC,GAAGD,MAAM,CAACG,OAAO,CAAC;IAC5B;MACE,OAAOU,SAAS;EAAC;AAEvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}