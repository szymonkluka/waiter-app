{"ast":null,"code":"import shortid from \"shortid\";\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostById = (_ref2, postId) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === postId);\n};\nexport const getPostByCategory = (_ref3, categoryId) => {\n  let {\n    posts\n  } = _ref3;\n  return posts.filter(post => post.category === categoryId);\n};\nexport const removePost = payload => ({\n  type: REMOVE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst REMOVE_POST = createActionName('REMOVE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\nconst postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE_POST:\n      return statePart.filter(post => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, {\n        id: shortid(),\n        ...action.payload\n      }];\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default postsReducer;","map":{"version":3,"names":["shortid","getAllPosts","posts","getPostById","postId","find","post","id","getPostByCategory","categoryId","filter","category","removePost","payload","type","REMOVE_POST","addPost","ADD_POST","editPost","EDIT_POST","createActionName","actionName","postsReducer","statePart","action","map"],"sources":["C:/Users/lenov/Desktop/react-blog-new/src/redux/postsRedux.js"],"sourcesContent":["import shortid from \"shortid\";\n\n\nexport const getAllPosts = ({ posts }) => posts;\nexport const getPostById = ({ posts }, postId) => posts.find(post => post.id === postId);\nexport const getPostByCategory = ({ posts }, categoryId) => posts.filter(post => post.category === categoryId);\n\nexport const removePost = payload => ({ type: REMOVE_POST, payload })\nexport const addPost = payload => ({ type: ADD_POST, payload });\nexport const editPost = payload => ({ type: EDIT_POST, payload });\n\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst REMOVE_POST = createActionName('REMOVE_POST')\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\nconst postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case REMOVE_POST:\n      return statePart.filter((post) => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, { id: shortid(), ...action.payload }];\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    default:\n      return statePart;\n  };\n};\n\nexport default postsReducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAG7B,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK;AAAA;AAC/C,OAAO,MAAMC,WAAW,GAAG,QAAYC,MAAM;EAAA,IAAjB;IAAEF;EAAM,CAAC;EAAA,OAAaA,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,MAAM,CAAC;AAAA;AACxF,OAAO,MAAMI,iBAAiB,GAAG,QAAYC,UAAU;EAAA,IAArB;IAAEP;EAAM,CAAC;EAAA,OAAiBA,KAAK,CAACQ,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACK,QAAQ,KAAKF,UAAU,CAAC;AAAA;AAE9G,OAAO,MAAMG,UAAU,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEC,WAAW;EAAEF;AAAQ,CAAC,CAAC;AACrE,OAAO,MAAMG,OAAO,GAAGH,OAAO,KAAK;EAAEC,IAAI,EAAEG,QAAQ;EAAEJ;AAAQ,CAAC,CAAC;AAC/D,OAAO,MAAMK,QAAQ,GAAGL,OAAO,KAAK;EAAEC,IAAI,EAAEK,SAAS;EAAEN;AAAQ,CAAC,CAAC;AAEjE,MAAMO,gBAAgB,GAAGC,UAAU,IAAK,aAAYA,UAAW,EAAC;AAChE,MAAMN,WAAW,GAAGK,gBAAgB,CAAC,aAAa,CAAC;AACnD,MAAMH,QAAQ,GAAGG,gBAAgB,CAAC,UAAU,CAAC;AAC7C,MAAMD,SAAS,GAAGC,gBAAgB,CAAC,WAAW,CAAC;AAE/C,MAAME,YAAY,GAAG,YAA4B;EAAA,IAA3BC,SAAS,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACV,IAAI;IACjB,KAAKC,WAAW;MACd,OAAOQ,SAAS,CAACb,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKiB,MAAM,CAACX,OAAO,CAAC;IAC/D,KAAKI,QAAQ;MACX,OAAO,CAAC,GAAGM,SAAS,EAAE;QAAEhB,EAAE,EAAEP,OAAO,EAAE;QAAE,GAAGwB,MAAM,CAACX;MAAQ,CAAC,CAAC;IAC7D,KAAKM,SAAS;MACZ,OAAOI,SAAS,CAACE,GAAG,CAACnB,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKiB,MAAM,CAACX,OAAO,CAACN,EAAE,GAAI;QAAE,GAAGD,IAAI;QAAE,GAAGkB,MAAM,CAACX;MAAQ,CAAC,GAAGP,IAAI,CAAC;IACvG;MACE,OAAOiB,SAAS;EAAC;EACpB;AACH,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}