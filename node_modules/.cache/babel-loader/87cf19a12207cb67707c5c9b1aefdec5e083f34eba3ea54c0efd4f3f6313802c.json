{"ast":null,"code":"import shortid from \"shortid\";\nimport { changeStatus } from './requestStatusReducer';\nimport { API_URL } from '../config';\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostByID = (_ref2, postsId) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === postsId);\n};\nexport const deletePost = payload => ({\n  type: DELETE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst GET_DATA = createActionName('GET_DATA');\nconst EDIT_TABLE = createActionName('EDIT_TABLE');\nexport const getData = payload => ({\n  type: GET_DATA,\n  payload\n});\nexport const editTable = payload => ({\n  type: EDIT_TABLE,\n  payload\n});\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(changeStatus(true));\n    fetch(`${API_URL}/tables`).then(response => response.json()).then(data => dispatch(getData(data))).then(() => dispatch(changeStatus(false)));\n  };\n};\nconst DELETE_POST = createActionName('DELETE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\nconst postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case EDIT_TABLE:\n      return statePart.map(post => {\n        if (post.id === action.payload.id) {\n          return {\n            ...post,\n            ...action.payload\n          };\n        } else {\n          return post;\n        }\n      });\n    case GET_DATA:\n      return [...action.payload];\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, {\n        ...action.payload,\n        id: shortid()\n      }];\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default postsReducer;","map":{"version":3,"names":["shortid","changeStatus","API_URL","getAllPosts","posts","getPostByID","postsId","find","post","id","deletePost","payload","type","DELETE_POST","addPost","ADD_POST","editPost","EDIT_POST","createActionName","actionName","GET_DATA","EDIT_TABLE","getData","editTable","fetchData","dispatch","fetch","then","response","json","data","postsReducer","statePart","action","map","filter"],"sources":["C:/Users/lenov/Desktop/waiter-app/src/redux/postsRedux.js"],"sourcesContent":["import shortid from \"shortid\";\nimport { changeStatus } from './requestStatusReducer';\nimport { API_URL } from '../config';\n\n\nexport const getAllPosts = ({ posts }) => posts;\nexport const getPostByID = ({ posts }, postsId) => posts.find(post => post.id === postsId);\n\nexport const deletePost = payload => ({ type: DELETE_POST, payload })\nexport const addPost = payload => ({ type: ADD_POST, payload });\nexport const editPost = payload => ({ type: EDIT_POST, payload });\n\nconst createActionName = actionName => `app/posts/${actionName}`;\n\nconst GET_DATA = createActionName('GET_DATA');\n\nconst EDIT_TABLE = createActionName('EDIT_TABLE');\n\nexport const getData = (payload) => ({ type: GET_DATA, payload });\nexport const editTable = (payload) => ({ type: EDIT_TABLE, payload });\n\nexport const fetchData = () => {\n  return (dispatch) => {\n    dispatch(changeStatus(true));\n    fetch(`${API_URL}/tables`)\n      .then((response) => response.json())\n      .then((data) => dispatch(getData(data)))\n      .then(() => dispatch(changeStatus(false)));\n  };\n};\n\nconst DELETE_POST = createActionName('DELETE_POST')\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\nconst postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case EDIT_TABLE:\n      return statePart.map((post) => {\n        if (post.id === action.payload.id) {\n          return { ...post, ...action.payload };\n        } else {\n          return post;\n        }\n      });\n    case GET_DATA:\n      return [...action.payload];\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload)\n    case ADD_POST:\n      return [...statePart, { ...action.payload, id: shortid() }];\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    default:\n      return statePart;\n  };\n};\n\nexport default postsReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}