{"ast":null,"code":"import shortid from \"shortid\";\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostByID = (_ref2, id) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === id);\n};\nexport const getPostByCategory = (_ref3, categoryId) => {\n  let {\n    posts\n  } = _ref3;\n  return posts.filter(post => post.category === categoryId);\n};\nexport const deletePost = payload => ({\n  type: DELETE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst DELETE_POST = createActionName('DELETE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\nconst postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, {\n        id: shortid(),\n        ...action.payload\n      }];\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default postsReducer;","map":{"version":3,"names":["shortid","getAllPosts","posts","getPostByID","id","find","post","getPostByCategory","categoryId","filter","category","deletePost","payload","type","DELETE_POST","addPost","ADD_POST","editPost","EDIT_POST","createActionName","actionName","postsReducer","statePart","action","map"],"sources":["C:/Users/lenov/Desktop/react-blog-new/src/redux/postsRedux.js"],"sourcesContent":["import shortid from \"shortid\";\n\n\nexport const getAllPosts = ({ posts }) => posts;\nexport const getPostByID = ({ posts }, id) => posts.find((post) => post.id === id);\nexport const getPostByCategory = ({ posts }, categoryId) => posts.filter(post => post.category === categoryId);\n\nexport const deletePost = payload => ({ type: DELETE_POST, payload })\nexport const addPost = payload => ({ type: ADD_POST, payload });\nexport const editPost = payload => ({ type: EDIT_POST, payload });\n\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst DELETE_POST = createActionName('DELETE_POST')\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\nconst postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case DELETE_POST:\n      return statePart.filter((post) => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, { id: shortid(), ...action.payload }];\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    default:\n      return statePart;\n  };\n};\n\nexport default postsReducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAG7B,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK;AAAA;AAC/C,OAAO,MAAMC,WAAW,GAAG,QAAYC,EAAE;EAAA,IAAb;IAAEF;EAAM,CAAC;EAAA,OAASA,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;AAAA;AAClF,OAAO,MAAMG,iBAAiB,GAAG,QAAYC,UAAU;EAAA,IAArB;IAAEN;EAAM,CAAC;EAAA,OAAiBA,KAAK,CAACO,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACI,QAAQ,KAAKF,UAAU,CAAC;AAAA;AAE9G,OAAO,MAAMG,UAAU,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEC,WAAW;EAAEF;AAAQ,CAAC,CAAC;AACrE,OAAO,MAAMG,OAAO,GAAGH,OAAO,KAAK;EAAEC,IAAI,EAAEG,QAAQ;EAAEJ;AAAQ,CAAC,CAAC;AAC/D,OAAO,MAAMK,QAAQ,GAAGL,OAAO,KAAK;EAAEC,IAAI,EAAEK,SAAS;EAAEN;AAAQ,CAAC,CAAC;AAEjE,MAAMO,gBAAgB,GAAGC,UAAU,IAAK,aAAYA,UAAW,EAAC;AAChE,MAAMN,WAAW,GAAGK,gBAAgB,CAAC,aAAa,CAAC;AACnD,MAAMH,QAAQ,GAAGG,gBAAgB,CAAC,UAAU,CAAC;AAC7C,MAAMD,SAAS,GAAGC,gBAAgB,CAAC,WAAW,CAAC;AAE/C,MAAME,YAAY,GAAG,YAA4B;EAAA,IAA3BC,SAAS,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACV,IAAI;IACjB,KAAKC,WAAW;MACd,OAAOQ,SAAS,CAACb,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKmB,MAAM,CAACX,OAAO,CAAC;IAC/D,KAAKI,QAAQ;MACX,OAAO,CAAC,GAAGM,SAAS,EAAE;QAAElB,EAAE,EAAEJ,OAAO,EAAE;QAAE,GAAGuB,MAAM,CAACX;MAAQ,CAAC,CAAC;IAC7D,KAAKM,SAAS;MACZ,OAAOI,SAAS,CAACE,GAAG,CAAClB,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKmB,MAAM,CAACX,OAAO,CAACR,EAAE,GAAI;QAAE,GAAGE,IAAI;QAAE,GAAGiB,MAAM,CAACX;MAAQ,CAAC,GAAGN,IAAI,CAAC;IACvG;MACE,OAAOgB,SAAS;EAAC;EACpB;AACH,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}