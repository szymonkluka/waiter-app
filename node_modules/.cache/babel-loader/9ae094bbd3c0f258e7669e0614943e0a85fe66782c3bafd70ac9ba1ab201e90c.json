{"ast":null,"code":"import shortid from \"shortid\";\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostByID = (_ref2, postsId) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === postsId);\n};\nexport const getPostsByCategory = (_ref3, category) => {\n  let {\n    posts\n  } = _ref3;\n  return posts.filter(post => post.category === category);\n};\nexport const deletePost = payload => ({\n  type: DELETE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst GET_DATA = createActionName('GET_DATA');\nconst DELETE_POST = createActionName('DELETE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\nconst postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, {\n        ...action.payload,\n        id: shortid()\n      }];\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default postsReducer;","map":{"version":3,"names":["shortid","getAllPosts","posts","getPostByID","postsId","find","post","id","getPostsByCategory","category","filter","deletePost","payload","type","DELETE_POST","addPost","ADD_POST","editPost","EDIT_POST","createActionName","actionName","GET_DATA","postsReducer","statePart","action","map"],"sources":["C:/Users/lenov/Desktop/waiter-app/src/redux/postsRedux.js"],"sourcesContent":["import shortid from \"shortid\";\n\nexport const getAllPosts = ({ posts }) => posts;\nexport const getPostByID = ({ posts }, postsId) => posts.find(post => post.id === postsId);\nexport const getPostsByCategory = ({ posts }, category) => posts.filter(post => post.category === category);\n\nexport const deletePost = payload => ({ type: DELETE_POST, payload })\nexport const addPost = payload => ({ type: ADD_POST, payload });\nexport const editPost = payload => ({ type: EDIT_POST, payload });\n\nconst createActionName = actionName => `app/posts/${actionName}`;\n\nconst GET_DATA = createActionName('GET_DATA');\n\nconst DELETE_POST = createActionName('DELETE_POST')\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\nconst postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload)\n    case ADD_POST:\n      return [...statePart, { ...action.payload, id: shortid() }];\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    default:\n      return statePart;\n  };\n};\n\nexport default postsReducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAE7B,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK;AAAA;AAC/C,OAAO,MAAMC,WAAW,GAAG,QAAYC,OAAO;EAAA,IAAlB;IAAEF;EAAM,CAAC;EAAA,OAAcA,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAAC;AAAA;AAC1F,OAAO,MAAMI,kBAAkB,GAAG,QAAYC,QAAQ;EAAA,IAAnB;IAAEP;EAAM,CAAC;EAAA,OAAeA,KAAK,CAACQ,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACG,QAAQ,KAAKA,QAAQ,CAAC;AAAA;AAE3G,OAAO,MAAME,UAAU,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEC,WAAW;EAAEF;AAAQ,CAAC,CAAC;AACrE,OAAO,MAAMG,OAAO,GAAGH,OAAO,KAAK;EAAEC,IAAI,EAAEG,QAAQ;EAAEJ;AAAQ,CAAC,CAAC;AAC/D,OAAO,MAAMK,QAAQ,GAAGL,OAAO,KAAK;EAAEC,IAAI,EAAEK,SAAS;EAAEN;AAAQ,CAAC,CAAC;AAEjE,MAAMO,gBAAgB,GAAGC,UAAU,IAAK,aAAYA,UAAW,EAAC;AAEhE,MAAMC,QAAQ,GAAGF,gBAAgB,CAAC,UAAU,CAAC;AAE7C,MAAML,WAAW,GAAGK,gBAAgB,CAAC,aAAa,CAAC;AACnD,MAAMH,QAAQ,GAAGG,gBAAgB,CAAC,UAAU,CAAC;AAC7C,MAAMD,SAAS,GAAGC,gBAAgB,CAAC,WAAW,CAAC;AAE/C,MAAMG,YAAY,GAAG,YAA4B;EAAA,IAA3BC,SAAS,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACX,IAAI;IACjB,KAAKC,WAAW;MACd,OAAOS,SAAS,CAACb,MAAM,CAACJ,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKiB,MAAM,CAACZ,OAAO,CAAC;IAC7D,KAAKI,QAAQ;MACX,OAAO,CAAC,GAAGO,SAAS,EAAE;QAAE,GAAGC,MAAM,CAACZ,OAAO;QAAEL,EAAE,EAAEP,OAAO;MAAG,CAAC,CAAC;IAC7D,KAAKkB,SAAS;MACZ,OAAOK,SAAS,CAACE,GAAG,CAACnB,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKiB,MAAM,CAACZ,OAAO,CAACL,EAAE,GAAI;QAAE,GAAGD,IAAI;QAAE,GAAGkB,MAAM,CAACZ;MAAQ,CAAC,GAAGN,IAAI,CAAC;IACvG;MACE,OAAOiB,SAAS;EAAC;EACpB;AACH,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}