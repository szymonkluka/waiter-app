{"ast":null,"code":"import { API_URL } from '../config';\nconst createActionNames = action => {\n  return `app/status/${action}`;\n};\nconst CHANGE_STATUS = createActionNames('CHANGE_STATUS');\n\n//selectors\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostById = (_ref2, id) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === id);\n};\n\n// actions\nconst createActionName = action => {\n  return `app/posts/${action}`;\n};\nconst GET_DATA = createActionName('GET_DATA');\nconst EDIT_POST = createActionName('EDIT_POST');\n\n// action creators\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nexport const getData = payload => ({\n  type: GET_DATA,\n  payload\n});\nexport const changeStatus = payload => ({\n  type: CHANGE_STATUS,\n  payload\n});\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(changeStatus(true));\n    fetch(`${API_URL}/posts`).then(response => response.json()).then(data => dispatch(getData(data)));\n  };\n};\n\n// reducer\nexport const postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_DATA:\n      return [...action.payload];\n    case CHANGE_STATUS:\n      {\n        return action.payload;\n      }\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"names":["API_URL","createActionNames","action","CHANGE_STATUS","getAllPosts","_ref","posts","getPostById","_ref2","id","find","post","createActionName","GET_DATA","EDIT_POST","editPost","payload","type","getData","changeStatus","fetchData","dispatch","fetch","then","response","json","data","postsReducer","statePart","arguments","length","undefined","map"],"sources":["C:/Users/lenov/Downloads/kodilla-waiter-app-master (1)/kodilla-waiter-app-master/src/redux/tablesReducer.js"],"sourcesContent":["import { API_URL } from '../config';\n\nconst createActionNames = (action) => {\n  return `app/status/${action}`;\n};\n\nconst CHANGE_STATUS = createActionNames('CHANGE_STATUS');\n\n\n//selectors\nexport const getAllPosts = ({ posts }) => posts;\n\nexport const getPostById = ({ posts }, id) =>\n  posts.find((post) => post.id === id);\n\n// actions\nconst createActionName = (action) => {\n  return `app/posts/${action}`;\n};\nconst GET_DATA = createActionName('GET_DATA');\nconst EDIT_POST = createActionName('EDIT_POST');\n\n// action creators\nexport const editPost = payload => ({ type: EDIT_POST, payload });\nexport const getData = (payload) => ({ type: GET_DATA, payload });\nexport const changeStatus = (payload) => ({ type: CHANGE_STATUS, payload });\n\nexport const fetchData = () => {\n  return (dispatch) => {\n    dispatch(changeStatus(true));\n    fetch(`${API_URL}/posts`)\n      .then((response) => response.json())\n      .then((data) => dispatch(getData(data)))\n  };\n};\n\n// reducer\nexport const postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return [...action.payload];\n    case CHANGE_STATUS: {\n      return action.payload;\n    }\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    default:\n      return statePart;\n  }\n};\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,WAAW;AAEnC,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;EACpC,OAAQ,cAAaA,MAAO,EAAC;AAC/B,CAAC;AAED,MAAMC,aAAa,GAAGF,iBAAiB,CAAC,eAAe,CAAC;;AAGxD;AACA,OAAO,MAAMG,WAAW,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAC,GAAAD,IAAA;EAAA,OAAKC,KAAK;AAAA;AAE/C,OAAO,MAAMC,WAAW,GAAGA,CAAAC,KAAA,EAAYC,EAAE;EAAA,IAAb;IAAEH;EAAM,CAAC,GAAAE,KAAA;EAAA,OACnCF,KAAK,CAACI,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;AAAA;;AAEtC;AACA,MAAMG,gBAAgB,GAAIV,MAAM,IAAK;EACnC,OAAQ,aAAYA,MAAO,EAAC;AAC9B,CAAC;AACD,MAAMW,QAAQ,GAAGD,gBAAgB,CAAC,UAAU,CAAC;AAC7C,MAAME,SAAS,GAAGF,gBAAgB,CAAC,WAAW,CAAC;;AAE/C;AACA,OAAO,MAAMG,QAAQ,GAAGC,OAAO,KAAK;EAAEC,IAAI,EAAEH,SAAS;EAAEE;AAAQ,CAAC,CAAC;AACjE,OAAO,MAAME,OAAO,GAAIF,OAAO,KAAM;EAAEC,IAAI,EAAEJ,QAAQ;EAAEG;AAAQ,CAAC,CAAC;AACjE,OAAO,MAAMG,YAAY,GAAIH,OAAO,KAAM;EAAEC,IAAI,EAAEd,aAAa;EAAEa;AAAQ,CAAC,CAAC;AAE3E,OAAO,MAAMI,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAQC,QAAQ,IAAK;IACnBA,QAAQ,CAACF,YAAY,CAAC,IAAI,CAAC,CAAC;IAC5BG,KAAK,CAAE,GAAEtB,OAAQ,QAAO,CAAC,CACtBuB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,QAAQ,CAACH,OAAO,CAACQ,IAAI,CAAC,CAAC,CAAC;EAC5C,CAAC;AACH,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,SAAAA,CAAA,EAA4B;EAAA,IAA3BC,SAAS,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAE3B,MAAM,GAAA2B,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjD,QAAQ7B,MAAM,CAACe,IAAI;IACjB,KAAKJ,QAAQ;MACX,OAAO,CAAC,GAAGX,MAAM,CAACc,OAAO,CAAC;IAC5B,KAAKb,aAAa;MAAE;QAClB,OAAOD,MAAM,CAACc,OAAO;MACvB;IACA,KAAKF,SAAS;MACZ,OAAOc,SAAS,CAACI,GAAG,CAACrB,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKP,MAAM,CAACc,OAAO,CAACP,EAAE,GAAI;QAAE,GAAGE,IAAI;QAAE,GAAGT,MAAM,CAACc;MAAQ,CAAC,GAAGL,IAAI,CAAC;IACvG;MACE,OAAOiB,SAAS;EAAC;AAEvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}