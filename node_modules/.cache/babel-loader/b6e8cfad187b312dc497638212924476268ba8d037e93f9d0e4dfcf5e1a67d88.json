{"ast":null,"code":"import shortid from \"shortid\";\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostByID = (_ref2, postsId) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(list => list.id === postsId);\n};\nexport const getAllCategories = _ref3 => {\n  let {\n    categories\n  } = _ref3;\n  return categories;\n};\nexport const categorRedux = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    default:\n      return statePart;\n  }\n};\nexport const deletePost = payload => ({\n  type: DELETE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst DELETE_POST = createActionName('DELETE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\nconst postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, {\n        ...action.payload,\n        id: shortid()\n      }];\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n  ;\n};\nexport default postsReducer;","map":{"version":3,"names":["shortid","getAllPosts","posts","getPostByID","postsId","find","list","id","getAllCategories","categories","categorRedux","statePart","action","type","deletePost","payload","DELETE_POST","addPost","ADD_POST","editPost","EDIT_POST","createActionName","actionName","postsReducer","filter","post","map"],"sources":["C:/Users/lenov/Desktop/react-blog-new/src/redux/postsRedux.js"],"sourcesContent":["import shortid from \"shortid\";\n\n\nexport const getAllPosts = ({ posts }) => posts;\nexport const getPostByID = ({ posts }, postsId) => posts.find(list => list.id === postsId);\n\nexport const getAllCategories = ({ categories }) => categories;\n\nexport const categorRedux = (statePart = [], action) => {\n  switch (action.type) {\n    default:\n      return statePart;\n  }\n};\n\nexport const deletePost = payload => ({ type: DELETE_POST, payload })\nexport const addPost = payload => ({ type: ADD_POST, payload });\nexport const editPost = payload => ({ type: EDIT_POST, payload });\n\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst DELETE_POST = createActionName('DELETE_POST')\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\nconst postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case DELETE_POST:\n      return statePart.filter(post => post.id !== action.payload)\n    case ADD_POST:\n      return [...statePart, { ...action.payload, id: shortid() }];\n    case EDIT_POST:\n      return statePart.map(post => (post.id === action.payload.id) ? { ...post, ...action.payload } : post);\n    default:\n      return statePart;\n  };\n};\n\nexport default postsReducer;"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAG7B,OAAO,MAAMC,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK;AAAA;AAC/C,OAAO,MAAMC,WAAW,GAAG,QAAYC,OAAO;EAAA,IAAlB;IAAEF;EAAM,CAAC;EAAA,OAAcA,KAAK,CAACG,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKH,OAAO,CAAC;AAAA;AAE1F,OAAO,MAAMI,gBAAgB,GAAG;EAAA,IAAC;IAAEC;EAAW,CAAC;EAAA,OAAKA,UAAU;AAAA;AAE9D,OAAO,MAAMC,YAAY,GAAG,YAA4B;EAAA,IAA3BC,SAAS,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB;MACE,OAAOF,SAAS;EAAC;AAEvB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGC,OAAO,KAAK;EAAEF,IAAI,EAAEG,WAAW;EAAED;AAAQ,CAAC,CAAC;AACrE,OAAO,MAAME,OAAO,GAAGF,OAAO,KAAK;EAAEF,IAAI,EAAEK,QAAQ;EAAEH;AAAQ,CAAC,CAAC;AAC/D,OAAO,MAAMI,QAAQ,GAAGJ,OAAO,KAAK;EAAEF,IAAI,EAAEO,SAAS;EAAEL;AAAQ,CAAC,CAAC;AAEjE,MAAMM,gBAAgB,GAAGC,UAAU,IAAK,aAAYA,UAAW,EAAC;AAChE,MAAMN,WAAW,GAAGK,gBAAgB,CAAC,aAAa,CAAC;AACnD,MAAMH,QAAQ,GAAGG,gBAAgB,CAAC,UAAU,CAAC;AAC7C,MAAMD,SAAS,GAAGC,gBAAgB,CAAC,WAAW,CAAC;AAE/C,MAAME,YAAY,GAAG,YAA4B;EAAA,IAA3BZ,SAAS,uEAAG,EAAE;EAAA,IAAEC,MAAM;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKG,WAAW;MACd,OAAOL,SAAS,CAACa,MAAM,CAACC,IAAI,IAAIA,IAAI,CAAClB,EAAE,KAAKK,MAAM,CAACG,OAAO,CAAC;IAC7D,KAAKG,QAAQ;MACX,OAAO,CAAC,GAAGP,SAAS,EAAE;QAAE,GAAGC,MAAM,CAACG,OAAO;QAAER,EAAE,EAAEP,OAAO;MAAG,CAAC,CAAC;IAC7D,KAAKoB,SAAS;MACZ,OAAOT,SAAS,CAACe,GAAG,CAACD,IAAI,IAAKA,IAAI,CAAClB,EAAE,KAAKK,MAAM,CAACG,OAAO,CAACR,EAAE,GAAI;QAAE,GAAGkB,IAAI;QAAE,GAAGb,MAAM,CAACG;MAAQ,CAAC,GAAGU,IAAI,CAAC;IACvG;MACE,OAAOd,SAAS;EAAC;EACpB;AACH,CAAC;AAED,eAAeY,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}