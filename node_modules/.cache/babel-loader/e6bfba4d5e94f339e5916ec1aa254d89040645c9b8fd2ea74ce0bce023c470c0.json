{"ast":null,"code":"//selectors\nexport const getAllPosts = _ref => {\n  let {\n    posts\n  } = _ref;\n  return posts;\n};\nexport const getPostByID = (_ref2, id) => {\n  let {\n    posts\n  } = _ref2;\n  return posts.find(post => post.id === id);\n};\nexport const getPostsByCategory = (_ref3, category) => {\n  let {\n    posts\n  } = _ref3;\n  return posts.filter(post => post.category === category);\n};\n\n// actions\nconst createActionName = actionName => `app/posts/${actionName}`;\nconst REMOVE_POST = createActionName('REMOVE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\n// action creators\nexport const removePost = payload => ({\n  type: REMOVE_POST,\n  payload\n});\nexport const addPost = payload => ({\n  type: ADD_POST,\n  payload\n});\nexport const editPost = payload => ({\n  type: EDIT_POST,\n  payload\n});\nexport const postsReducer = function () {\n  let statePart = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REMOVE_POST:\n      return statePart.filter(post => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, {\n        ...action.payload\n      }];\n    case EDIT_POST:\n      return statePart.map(post => post.id === action.payload.id ? {\n        ...post,\n        ...action.payload\n      } : post);\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"names":["getAllPosts","posts","getPostByID","id","find","post","getPostsByCategory","category","filter","createActionName","actionName","REMOVE_POST","ADD_POST","EDIT_POST","removePost","payload","type","addPost","editPost","postsReducer","statePart","action","map"],"sources":["C:/Users/lenov/Desktop/react-blog-new/src/redux/postsRedux.js"],"sourcesContent":["//selectors\nexport const getAllPosts = ({ posts }) => posts;\n\nexport const getPostByID = ({ posts }, id) =>\n  posts.find((post) => post.id === id);\n\nexport const getPostsByCategory = ({ posts }, category) =>\n  posts.filter((post) => post.category === category);\n\n// actions\nconst createActionName = (actionName) => `app/posts/${actionName}`;\nconst REMOVE_POST = createActionName('REMOVE_POST');\nconst ADD_POST = createActionName('ADD_POST');\nconst EDIT_POST = createActionName('EDIT_POST');\n\n// action creators\nexport const removePost = (payload) => ({ type: REMOVE_POST, payload });\n\nexport const addPost = (payload) => ({ type: ADD_POST, payload });\n\nexport const editPost = (payload) => ({ type: EDIT_POST, payload });\n\nexport const postsReducer = (statePart = [], action) => {\n  switch (action.type) {\n    case REMOVE_POST:\n      return statePart.filter((post) => post.id !== action.payload);\n    case ADD_POST:\n      return [...statePart, { ...action.payload }];\n    case EDIT_POST:\n      return statePart.map((post) =>\n        post.id === action.payload.id ? { ...post, ...action.payload } : post\n      );\n    default:\n      return statePart;\n  }\n};"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG;EAAA,IAAC;IAAEC;EAAM,CAAC;EAAA,OAAKA,KAAK;AAAA;AAE/C,OAAO,MAAMC,WAAW,GAAG,QAAYC,EAAE;EAAA,IAAb;IAAEF;EAAM,CAAC;EAAA,OACnCA,KAAK,CAACG,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKA,EAAE,CAAC;AAAA;AAEtC,OAAO,MAAMG,kBAAkB,GAAG,QAAYC,QAAQ;EAAA,IAAnB;IAAEN;EAAM,CAAC;EAAA,OAC1CA,KAAK,CAACO,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACE,QAAQ,KAAKA,QAAQ,CAAC;AAAA;;AAEpD;AACA,MAAME,gBAAgB,GAAIC,UAAU,IAAM,aAAYA,UAAW,EAAC;AAClE,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAa,CAAC;AACnD,MAAMG,QAAQ,GAAGH,gBAAgB,CAAC,UAAU,CAAC;AAC7C,MAAMI,SAAS,GAAGJ,gBAAgB,CAAC,WAAW,CAAC;;AAE/C;AACA,OAAO,MAAMK,UAAU,GAAIC,OAAO,KAAM;EAAEC,IAAI,EAAEL,WAAW;EAAEI;AAAQ,CAAC,CAAC;AAEvE,OAAO,MAAME,OAAO,GAAIF,OAAO,KAAM;EAAEC,IAAI,EAAEJ,QAAQ;EAAEG;AAAQ,CAAC,CAAC;AAEjE,OAAO,MAAMG,QAAQ,GAAIH,OAAO,KAAM;EAAEC,IAAI,EAAEH,SAAS;EAAEE;AAAQ,CAAC,CAAC;AAEnE,OAAO,MAAMI,YAAY,GAAG,YAA4B;EAAA,IAA3BC,SAAS,uEAAG,EAAE;EAAA,IAAEC,MAAM;EACjD,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAKL,WAAW;MACd,OAAOS,SAAS,CAACZ,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKkB,MAAM,CAACN,OAAO,CAAC;IAC/D,KAAKH,QAAQ;MACX,OAAO,CAAC,GAAGQ,SAAS,EAAE;QAAE,GAAGC,MAAM,CAACN;MAAQ,CAAC,CAAC;IAC9C,KAAKF,SAAS;MACZ,OAAOO,SAAS,CAACE,GAAG,CAAEjB,IAAI,IACxBA,IAAI,CAACF,EAAE,KAAKkB,MAAM,CAACN,OAAO,CAACZ,EAAE,GAAG;QAAE,GAAGE,IAAI;QAAE,GAAGgB,MAAM,CAACN;MAAQ,CAAC,GAAGV,IAAI,CACtE;IACH;MACE,OAAOe,SAAS;EAAC;AAEvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}